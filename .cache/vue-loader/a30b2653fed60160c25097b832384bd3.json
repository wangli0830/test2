{"remainingRequest":"/Users/wangli/project/qa_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangli/project/qa_web/src/components/HelloWorld.vue?vue&type=style&index=0&id=8850c4ae&scoped=true&lang=css&","dependencies":[{"path":"/Users/wangli/project/qa_web/src/components/HelloWorld.vue","mtime":1613963843056},{"path":"/Users/wangli/project/qa_web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangli/project/qa_web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/wangli/project/qa_web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/wangli/project/qa_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangli/project/qa_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oZWxsbyB7CiAgcGFkZGluZzogMjBweDsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9Ci51bCB7CiAgbWFyZ2luLXRvcDogMTBweDsKICBtYXJnaW4tYm90dG9tOiA0MHB4Owp9Cgoud2l0aGhvbGRfdGFibGUgewogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogNTBweDsKfQoudWwgLmVsLWlucHV0IHsKICB3aWR0aDogMzAwcHg7CiAgbWFyZ2luLXJpZ2h0OiAyMHB4Owp9Ci5oZWxsbyAuZWwtc2VsZWN0IHsKICBtYXJnaW4tcmlnaHQ6IDIwcHg7Cn0K"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n\n    <div class=\"ul\">\n      清除金融订阅数据： <el-input v-model=\"agreementUid\" placeholder=\"请输入用户uid\"></el-input>     <!-- el-input 【输入框】输入的内容存在\"agreementUid\"变量里 -->\n      <el-button @click=\"agreementClear\">提交</el-button>                                   <!--【提交】按钮，调用script.methods.agreementClear方法 -->\n    </div>\n\n\n    <div class=\"ul\">\n      查看代扣数据：\n      <el-select v-model=\"channel\" placeholder=\"请选择渠道\">\n        <el-option\n            v-for=\"item in channels\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n        >\n        </el-option>\n      </el-select>\n      <el-input v-model=\"agreement_id\" placeholder=\"请输入金融侧agreement_id\"></el-input>\n      <el-button @click=\"get_exec_at\">查询</el-button>\n    </div>\n\n    <div class=\"withhold_table\" id=\"withhold_table\">\n      <template v-if = \"tableData.length\">\n        <el-table\n            :data=\"tableData\"\n            style=\"width: 100%\">\n          <el-table-column\n              prop=\"withhold_id\"\n              label=\"代扣id\"\n              width=\"180\">\n          </el-table-column>\n          <el-table-column\n              prop=\"subject\"\n              label=\"代扣subject\"\n              width=\"240\">\n          </el-table-column>\n          <el-table-column\n              prop=\"status\"\n              label=\"代扣状态\"\n              width=\"130\">\n          </el-table-column>\n          <el-table-column\n              prop=\"exec_at\"\n              label=\"代扣日期\"\n              width=\"130\">\n          </el-table-column>\n          <el-table-column\n              prop=\"order_start_time\"\n              label=\"本单开始时间\"\n              width=\"150\">\n          </el-table-column>\n          <el-table-column\n              prop=\"order_end_time\"\n              label=\"本单结束时间\"\n              width=\"150\">\n          </el-table-column>\n          <el-table-column\n              prop=\"reason\"\n              label=\"代扣失败原因\"\n              width=\"180\">\n          </el-table-column>\n\n        </el-table>\n      </template>\n    </div>\n\n    <div class=\"ul\">\n      执行代扣：\n      <el-select v-model=\"withhold_channel\" placeholder=\"选择代扣渠道\">\n        <el-option\n            v-for=\"item in channels\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n        >\n        </el-option>\n      </el-select>\n      <el-button @click=\"withhold_start\">执行</el-button>\n    </div>\n\n  </div>\n</template>\n\n\n\n<script>\nimport { agreementClearResult, test1 ,queryExecAt,withholdStart} from \"../api/index\";\nexport default {\n  name: \"HelloWorld\",\n  props: {  //接收参数\n    msg: String,\n  },\n\n  data() {\n    return {\n      agreementUid: \"\",\n      channels:[\n        {value:\"1\",label:\"微信\",},\n        {value:\"2\",label:\"支付宝\",}\n      ],\n      channel:\"\",\n      agreement_id:\"\",\n      withhold_channel:\"\",\n\n      tableData: []\n\n    };\n  },\n\n  methods: {\n    agreementClear() {\n      if (!this.agreementUid){\n        return this.$message({\n          message: \"请输入用户uid\",\n          type: \"error\"\n        });\n      }\n      agreementClearResult(this.agreementUid).then((res) => {\n        console.log(res, \"res\");\n        if (res == 'succ') {\n          this.$message({\n            message: \"清除完成\",\n            type: \"success\"\n          });\n        }\n      });\n    },\n    get_exec_at(){\n      if (!this.channel || !this.agreement_id){\n        return this.$message({\n          message:\"请选择查询 渠道/agreement_id\",\n          type:\"error\"\n        });\n      }\n      console.log(this.channel)\n      console.log(this.agreement_id)\n      let para = {\n        \"channel\":this.channel,\n        \"agreement_id\":this.agreement_id\n      }\n      queryExecAt(para).then((res) => {\n        console.log(res,\"res\");\n        this.tableData = res.data\n        if (res.msg == '查无数据'){\n          return this.$message({\n            message:\"空，未查询到记录，请检查输入\",\n            type:\"error\"\n          });\n        }\n\n      });\n    },\n\n    withhold_start(){\n      if (!this.withhold_channel){\n        return this.$message({\n          message:\"请选择代扣渠道\",\n          type:\"error\"\n        });\n      }\n      console.log(this.withhold_channel)\n      let para = {\"channel\":this.withhold_channel}\n      withholdStart(para).then((res)=>{\n        console.log(res,\"res\");\n        if (res == 'fail'){\n          return this.$message({\n            message:\"执行代扣失败，请联系金融同事处理！\",\n            type:\"error\"\n          });\n        }\n\n\n      })\n\n    },\n\n\n    //范例写法，暂时没有使用到\n    addressSub() {\n      test1({\n        name: this.value\n      }).then((res) => {\n\n        console.log(res, \"res\");        // 控制台输出响应\n        alert(res.msg || \"没找到msg\")      // 弹窗 msg\n        this.$message({\n          message: '恭喜你，这是一条成功消息',\n          type: 'success'\n        });\n      });\n    },\n  },\n}\n\n\n\n</script>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.hello {\n  padding: 20px;\n  text-align: left;\n}\n.ul {\n  margin-top: 10px;\n  margin-bottom: 40px;\n}\n\n.withhold_table {\n  margin-top: 20px;\n  margin-bottom: 50px;\n}\n.ul .el-input {\n  width: 300px;\n  margin-right: 20px;\n}\n.hello .el-select {\n  margin-right: 20px;\n}\n</style>\n"]}]}